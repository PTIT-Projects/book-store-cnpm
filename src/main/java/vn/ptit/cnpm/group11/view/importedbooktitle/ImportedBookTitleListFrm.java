/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.ptit.cnpm.group11.view.importedbooktitle;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;
import vn.ptit.cnpm.group11.model.ImportBill;
import vn.ptit.cnpm.group11.model.ImportedBookTitle;
import vn.ptit.cnpm.group11.view.booktitle.SearchBookTitleFrm;
import vn.ptit.cnpm.group11.view.importbill.ConfirmFrm;

/**
 *
 * @author Admin
 */
public class ImportedBookTitleListFrm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ImportedBookTitleListFrm
     */
    private ImportBill importBill;
    private ArrayList<ImportedBookTitle> ibts;
    public ImportedBookTitleListFrm(ImportBill importBill) {
        initComponents();
        this.importBill = importBill;
        this.ibts = importBill.getImportedBookTitleList();
        this.setLocationRelativeTo(null);
        addActionListener();
        initTblImportedBookTitle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddBookTitle = new javax.swing.JLabel();
        scrllPnlImportedBookTitleList = new javax.swing.JScrollPane();
        tblImportedBookTitle = new javax.swing.JTable();
        btnImportBookTitle = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAddBookTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAddBookTitle.setText("Danh sách đầu truyện nhập");

        tblImportedBookTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblImportedBookTitle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1),  new Integer(3), "7 viên ngọc rồng tập 6",  new Integer(30000),  new Integer(15),  new Integer(450000)}
            },
            new String [] {
                "STT", "Mã", "Tên", "Đơn giá", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrllPnlImportedBookTitleList.setViewportView(tblImportedBookTitle);

        btnImportBookTitle.setText("Nhập thêm truyện");

        btnConfirm.setText("Xác nhận");

        btnCancel.setText("Huỷ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(375, 375, 375)
                .addComponent(lblAddBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(scrllPnlImportedBookTitleList)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(btnImportBookTitle)
                .addGap(230, 230, 230)
                .addComponent(btnConfirm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addGap(130, 130, 130))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllPnlImportedBookTitleList, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImportBookTitle)
                    .addComponent(btnConfirm)
                    .addComponent(btnCancel))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ImportedBookTitleListFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ImportedBookTitleListFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ImportedBookTitleListFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ImportedBookTitleListFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ImportedBookTitleListFrm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnImportBookTitle;
    private javax.swing.JLabel lblAddBookTitle;
    private javax.swing.JScrollPane scrllPnlImportedBookTitleList;
    private javax.swing.JTable tblImportedBookTitle;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            if (e.getSource().equals(btnCancel)) {
                this.dispose();
            } else if (e.getSource().equals(btnImportBookTitle)) {
                SearchBookTitleFrm sbtf = new SearchBookTitleFrm(importBill);
                sbtf.setVisible(true);
                this.dispose();
            } else if (e.getSource().equals(btnConfirm)) {
                ConfirmFrm confirmFrm = new ConfirmFrm(importBill);
                confirmFrm.setVisible(true);
                this.dispose();
            }
        }
    }
    private void addActionListener() {
        btnCancel.addActionListener(this);
        btnConfirm.addActionListener(this);
        btnImportBookTitle.addActionListener(this);
        tblImportedBookTitle.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int column = tblImportedBookTitle.getColumnModel().getColumnIndexAtX(e.getX());
                int row = e.getY() / tblImportedBookTitle.getRowHeight();
                
                if (row < tblImportedBookTitle.getRowCount() && row >= 0
                        && column < tblImportedBookTitle.getColumnCount()
                        && column >= 0) {
                    ImportedBookTitle ibt = ibts.get(row);
                    EnterQuantityFrm enterQuantityFrm = new EnterQuantityFrm(importBill, ibt.getBookTitle());
                    enterQuantityFrm.setVisible(true);
                    ImportedBookTitleListFrm.this.dispose();
                }
            }
        });
    }
    private void initTblImportedBookTitle() {
        String[] columns = {
           "STT", "Mã", "Tên", "Đơn giá", "Số lượng", "Thành tiền"
        };
        String[][] values = new String[ibts.size()][columns.length];
        for (int i = 0; i < ibts.size(); i++) {
            values[i][0] = String.valueOf(i + 1);
            values[i][1] = String.valueOf(ibts.get(i).getBookTitle().getId());
            values[i][2] = ibts.get(i).getBookTitle().getName();
            values[i][3] = String.valueOf(ibts.get(i).getBookTitle().getUnitPrice());
            values[i][4] = String.valueOf(ibts.get(i).getQuantity());
            values[i][5] = String.valueOf(ibts.get(i).getAmount());
        }
        DefaultTableModel tableModel = new DefaultTableModel(values, columns) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblImportedBookTitle.setModel(tableModel);
    }
}

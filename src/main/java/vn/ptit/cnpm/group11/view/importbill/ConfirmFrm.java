/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.ptit.cnpm.group11.view.importbill;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vn.ptit.cnpm.group11.model.ImportBill;
import vn.ptit.cnpm.group11.dao.ImportBillDAO;
import vn.ptit.cnpm.group11.model.ImportedBookTitle;
import vn.ptit.cnpm.group11.model.Provider;

/**
 *
 * @author Admin
 */
public class ConfirmFrm extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ConfirmFrm
     */
    private ImportBill importBill;
    public ConfirmFrm(ImportBill importBill) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.importBill = importBill;
        addActionListener();
        initTbls();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddBookTitle = new javax.swing.JLabel();
        scrllPnlImportedBookTitleList = new javax.swing.JScrollPane();
        tblImportedBookTitle = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblWarehouseStaffName = new javax.swing.JLabel();
        lblWarehouseStaffNameRes = new javax.swing.JLabel();
        lblProvider = new javax.swing.JLabel();
        scrllPnlListProvider = new javax.swing.JScrollPane();
        tblProvider = new javax.swing.JTable();
        lblImportedBookTitleTable = new javax.swing.JLabel();
        lblSaleOff = new javax.swing.JLabel();
        lblTotalAmount = new javax.swing.JLabel();
        lblTotalAmountRes = new javax.swing.JLabel();
        lblPaymentType = new javax.swing.JLabel();
        lblNote = new javax.swing.JLabel();
        scrllPnlNote = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        spnSaleOff = new javax.swing.JSpinner();
        lblImportDate = new javax.swing.JLabel();
        lblImportDateRes = new javax.swing.JLabel();
        cmbPaymentMethod = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblAddBookTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAddBookTitle.setText("Xác nhận nhập truyện");

        tblImportedBookTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblImportedBookTitle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1),  new Integer(3), "7 viên ngọc rồng tập 6",  new Integer(30000),  new Integer(15),  new Integer(450000)}
            },
            new String [] {
                "STT", "Mã", "Tên", "Đơn giá", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrllPnlImportedBookTitleList.setViewportView(tblImportedBookTitle);

        btnPrint.setText("In hoá đơn");

        btnCancel.setText("Huỷ");

        lblWarehouseStaffName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblWarehouseStaffName.setText("Tên nhân viên kho nhập truyện:");

        lblWarehouseStaffNameRes.setText("A");

        lblProvider.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblProvider.setText("Thông tin nhà cung cấp");

        tblProvider.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblProvider.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(2), "B", "Sài Gòn", "sgb@gmail.com", "9876543210", "Chuyên cung cấp truyện ngôn tình"}
            },
            new String [] {
                "Mã", "Tên", "Địa chỉ", "Email", "Điện thoại", "Mô tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scrllPnlListProvider.setViewportView(tblProvider);

        lblImportedBookTitleTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblImportedBookTitleTable.setText("Danh sách truyện nhập");

        lblSaleOff.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSaleOff.setText("Giảm giá");

        lblTotalAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTotalAmount.setText("Tổng tiền");

        lblTotalAmountRes.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTotalAmountRes.setText("450000");

        lblPaymentType.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPaymentType.setText("Phương thức thanh toán");

        lblNote.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNote.setText("Ghi chú");

        txtNote.setColumns(20);
        txtNote.setRows(5);
        scrllPnlNote.setViewportView(txtNote);

        lblImportDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblImportDate.setText("Ngày nhập truyện");

        lblImportDateRes.setText("11/4/2025");

        cmbPaymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Chuyển khoản", "Thẻ tín dụng" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrllPnlImportedBookTitleList))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(242, 424, Short.MAX_VALUE)
                .addComponent(lblAddBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(411, 411, 411))
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(btnPrint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addGap(186, 186, 186))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblProvider, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblImportDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblWarehouseStaffName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblWarehouseStaffNameRes, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblImportDateRes, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblImportedBookTitleTable, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTotalAmount)
                                    .addComponent(lblSaleOff, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(121, 121, 121))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNote)
                                    .addComponent(lblPaymentType))
                                .addGap(131, 131, 131)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scrllPnlNote, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTotalAmountRes, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnSaleOff, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(scrllPnlListProvider, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddBookTitle)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWarehouseStaffName)
                    .addComponent(lblWarehouseStaffNameRes))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImportDate)
                    .addComponent(lblImportDateRes))
                .addGap(25, 25, 25)
                .addComponent(lblProvider)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllPnlListProvider, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblImportedBookTitleTable)
                .addGap(11, 11, 11)
                .addComponent(scrllPnlImportedBookTitleList, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaleOff)
                    .addComponent(spnSaleOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalAmount, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTotalAmountRes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaymentType)
                    .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNote)
                    .addComponent(scrllPnlNote, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ConfirmFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ConfirmFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ConfirmFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ConfirmFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ConfirmFrm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox<String> cmbPaymentMethod;
    private javax.swing.JLabel lblAddBookTitle;
    private javax.swing.JLabel lblImportDate;
    private javax.swing.JLabel lblImportDateRes;
    private javax.swing.JLabel lblImportedBookTitleTable;
    private javax.swing.JLabel lblNote;
    private javax.swing.JLabel lblPaymentType;
    private javax.swing.JLabel lblProvider;
    private javax.swing.JLabel lblSaleOff;
    private javax.swing.JLabel lblTotalAmount;
    private javax.swing.JLabel lblTotalAmountRes;
    private javax.swing.JLabel lblWarehouseStaffName;
    private javax.swing.JLabel lblWarehouseStaffNameRes;
    private javax.swing.JScrollPane scrllPnlImportedBookTitleList;
    private javax.swing.JScrollPane scrllPnlListProvider;
    private javax.swing.JScrollPane scrllPnlNote;
    private javax.swing.JSpinner spnSaleOff;
    private javax.swing.JTable tblImportedBookTitle;
    private javax.swing.JTable tblProvider;
    private javax.swing.JTextArea txtNote;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            if (e.getSource().equals(btnCancel)) {
                this.dispose();
            } else if (e.getSource().equals(btnPrint)) {
                importBill.setImportDate(LocalDate.now());
                importBill.setSaleOff((int)spnSaleOff.getValue());
                importBill.setNote(txtNote.getText());
                importBill.setPaymentMethod((String)cmbPaymentMethod.getSelectedItem());
                
                ImportBillDAO ibdao = new ImportBillDAO();
                try {
                    if (ibdao.confirmImportBookTitle(importBill)) {
                        JOptionPane.showMessageDialog(this, "Nhập truyện từ nhà cung cấp thành công!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Nhập truyện từ nhà cung cấp thất bại!");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }
    private void addActionListener() {
        btnCancel.addActionListener(this);
        btnPrint.addActionListener(this);
        spnSaleOff.addChangeListener(listener -> {
            int saleOff = (int)spnSaleOff.getValue();

            lblTotalAmountRes.setText(String.valueOf(calTotalAmount() - saleOff));
        });
    }
    private void initTbls(){
        String[] providerColumns = {
          "Mã", "Tên", "Địa chỉ", "Email", "Điện thoại", "Mô tả"
        };
        String[][] providerValue = new String[1][providerColumns.length];
        Provider provider = importBill.getProvider();
        providerValue[0][0] = String.valueOf(provider.getId());
        providerValue[0][1] = provider.getName();
        providerValue[0][2] = provider.getAddress();
        providerValue[0][3] = provider.getEmail();
        providerValue[0][4] = provider.getPhoneNumber();
        providerValue[0][5] = provider.getNote();
        DefaultTableModel providerTableModel = new DefaultTableModel(providerValue, providerColumns) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblProvider.setModel(providerTableModel);
        
        String[] importedBookTitlecolumns = {
           "STT", "Mã", "Tên", "Đơn giá", "Số lượng", "Thành tiền"
        };
        ArrayList<ImportedBookTitle> ibts = importBill.getImportedBookTitleList();
        String[][] importedBookTitleValues = new String[ibts.size()][importedBookTitlecolumns.length];
        for (int i = 0; i < ibts.size(); i++) {
            importedBookTitleValues[i][0] = String.valueOf(i + 1);
            importedBookTitleValues[i][1] = String.valueOf(ibts.get(i).getBookTitle().getId());
            importedBookTitleValues[i][2] = ibts.get(i).getBookTitle().getName();
            importedBookTitleValues[i][3] = String.valueOf(ibts.get(i).getBookTitle().getUnitPrice());
            importedBookTitleValues[i][4] = String.valueOf(ibts.get(i).getQuantity());
            importedBookTitleValues[i][5] = String.valueOf(ibts.get(i).getAmount());
        }
        DefaultTableModel importedBookTitletableModel = new DefaultTableModel(importedBookTitleValues, importedBookTitlecolumns) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblImportedBookTitle.setModel(importedBookTitletableModel);
        lblImportDateRes.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        lblWarehouseStaffNameRes.setText(importBill.getUser().getFullName());
        lblTotalAmountRes.setText(String.valueOf(calTotalAmount()));
    }
    private long calTotalAmount() {
        long res = 0;
        for (ImportedBookTitle ibt : importBill.getImportedBookTitleList()) {
            res += ibt.getAmount();
        }
        return res;
    }

}
